Wyrażenia regularne w PHP:

Wyrażenia regularne pełnią istotną rolę w PHP. Umożliwiają one opisywanie i przetwarzanie długich ciągów znaków. Dzieje się to na zasadzie porównania danego ciągu znaków z określonym wzorem, ułożonym przez programistę.

1. Czym są wyrażenia regularne?

- Wyrażenia regularne to bardzo przydatne narzędzie istniejące nie tylko w języku PHP. Dzięki nim, możliwe jest wykonanie wielu operacji na raz np. wyszukiwanie określonych elementów, walidacja adresów email, walidacja adresów URL oraz zamiana poszczególnych fragmentów strony.
- Zadaniem programisty jest zaprojektowanie określonego wzorcu (ang. pattern). Następnie odpowiednie funkcje wyrażeń regularnych próbują dopasować do niego tekst.

2. Operatory wyrażeń regularnych:

^ - Operator początku ciągu znaków.
$ - Operator końca ciągu znaków.
. - Operator jednego dowolnego znaku.
[a-z] - Dowolne litery od a do z.
[A-Z] - Dowolne litery od A do Z.
[0-9] - Dowolne cyfry od 0 do 9.
[^ ] - Operator negacji zbioru.
* - Operator powtórzenia 0 lub więcej razy.
+ - Operator powtórzenia 1 lub więcej razy.
? - Operator powtórzenia 1 lub 0 razy.
| - Operator alternatywy.
( ) - Wyrażenie wewnątrz nawiasów jest atomem (rozpatrujemy je jako całość).
{x} - Operator powtórzenia dokładnie ‚x’ razy.
{x,y} - Operator powtórzenia minimum ‚x’ i maksimum ‚y’ razy.

3. Tworzenie wyrażeń regularnych

- Wyrażenie regularne musi znaleźć się pomiędzy ukośnikami “/ … /“. W przypadku przypisania do zmiennej nie możemy zapomnieć o apostrofach. Następnie każde wyrażenie regularne należy rozpocząć znakiem ^ oraz zakończyć znakiem $. Są to tak zwane znaki początku i końca.
- Między tymi granicami wpisujemy żądaną formułę. By np. wpisać przedział znaków wykorzystujemy nawiasy kwadratowe [ ]. Możemy między nimi wpisać dowolne przedziały, np.: [a-eA-E0-7], wtedy wzorcem będą tylko takie ciągi, które zawierają w sobie jedynie małe i wielkie litery od a do e oraz cyfry od 0 do 7.


3. Funkcja preg_match:

- Funkcja preg_match() jest podstawową funkcją PHP dotyczącą wyrażeń regularnych. Przyjmuje ona 2 argumenty: wzorzec oraz ciąg znaków. Jeżeli ciąg znaków zostanie pomyślnie dopasowany do wzorca – zwraca wartość logiczną true, w przeciwnym razie false.

- Przykład zapisania wyniku działania preg_match() do zmiennej:
$zmienna = preg_match (string $wzorzec, string $ciag_znakow);

- Przekazując wzorzec do funkcji należy pamiętać aby umieścić go pomiędzy dwoma slashami. Przykładowe wywołanie funkcji może wyglądać następująco:

<?php
    if (preg_match('/xyz/', $_POST['fraza']))
    {
        echo "Wzorzec 'xyz' pasuje do ciągu znaków " . $_POST['fraza'] ".";
    }
    else
    {
        echo "Błąd: wzorzec nie pasuje do ciągu znaków.";
    }
?>